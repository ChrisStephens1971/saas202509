# Generated by Django 5.1 on 2025-10-29 10:06

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0011_add_delinquency_collections_models'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AutoMatchRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Rule name (auto-generated or custom)', max_length=255)),
                ('rule_type', models.CharField(choices=[('EXACT', 'Exact Match'), ('FUZZY', 'Fuzzy Match'), ('PATTERN', 'Pattern Match'), ('REFERENCE', 'Reference Match'), ('ML', 'ML-Based Match')], max_length=20)),
                ('pattern', models.JSONField(help_text='Rule pattern as JSON (amount range, date tolerance, description regex, etc.)')),
                ('confidence_score', models.IntegerField(default=50, help_text='Confidence score (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(100)])),
                ('match_count', models.IntegerField(default=0, help_text='Number of successful matches using this rule')),
                ('accuracy_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Accuracy rate as percentage (verified matches / total matches)', max_digits=5)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rule is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_account', models.ForeignKey(blank=True, help_text='Target account for matched transactions', null=True, on_delete=django.db.models.deletion.CASCADE, to='accounting.account')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auto_match_rules', to='tenants.tenant')),
            ],
            options={
                'db_table': 'auto_match_rules',
                'ordering': ['-confidence_score', '-match_count'],
            },
        ),
        migrations.CreateModel(
            name='MatchResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('confidence_score', models.IntegerField(help_text='Match confidence (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MinValueValidator(100)])),
                ('match_explanation', models.TextField(help_text='Explanation of why this match was suggested')),
                ('status', models.CharField(choices=[('SUGGESTED', 'Suggested'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('AUTO_MATCHED', 'Auto-Matched')], default='SUGGESTED', max_length=20)),
                ('reviewed_by', models.CharField(blank=True, help_text='User who reviewed this match', max_length=255)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bank_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_results', to='accounting.banktransaction')),
                ('matched_entry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_results', to='accounting.journalentry')),
                ('rule_used', models.ForeignKey(blank=True, help_text='Rule that generated this match', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.automatchrule')),
            ],
            options={
                'db_table': 'match_results',
                'ordering': ['-confidence_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MatchStatistics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Date for these statistics')),
                ('total_transactions', models.IntegerField(default=0, help_text='Total bank transactions processed')),
                ('auto_matched', models.IntegerField(default=0, help_text='Transactions auto-matched with high confidence')),
                ('manually_matched', models.IntegerField(default=0, help_text='Transactions matched manually')),
                ('unmatched', models.IntegerField(default=0, help_text='Transactions remaining unmatched')),
                ('auto_match_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Auto-match rate as percentage', max_digits=5)),
                ('average_confidence', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Average confidence score of matches', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_statistics', to='tenants.tenant')),
            ],
            options={
                'db_table': 'match_statistics',
                'ordering': ['-date'],
            },
        ),
        migrations.AddIndex(
            model_name='automatchrule',
            index=models.Index(fields=['tenant', '-confidence_score'], name='auto_match__tenant__3f5fcc_idx'),
        ),
        migrations.AddIndex(
            model_name='automatchrule',
            index=models.Index(fields=['is_active'], name='auto_match__is_acti_1172e7_idx'),
        ),
        migrations.AddIndex(
            model_name='matchresult',
            index=models.Index(fields=['bank_transaction', '-confidence_score'], name='match_resul_bank_tr_348002_idx'),
        ),
        migrations.AddIndex(
            model_name='matchresult',
            index=models.Index(fields=['status'], name='match_resul_status_60a94f_idx'),
        ),
        migrations.AddIndex(
            model_name='matchstatistics',
            index=models.Index(fields=['tenant', '-date'], name='match_stati_tenant__2b9619_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='matchstatistics',
            unique_together={('tenant', 'date')},
        ),
    ]
