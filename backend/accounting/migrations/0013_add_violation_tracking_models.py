# Generated by Django 5.1 on 2025-10-29 10:08

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounting', '0012_add_auto_matching_engine_models'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Violation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('violation_type', models.CharField(help_text="Type of violation (e.g., 'Unpainted Fence', 'Overgrown Lawn')", max_length=255)),
                ('description', models.TextField(help_text='Detailed description of violation')),
                ('location', models.CharField(blank=True, help_text='Specific location on property', max_length=255)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('REPORTED', 'Reported'), ('NOTICE_SENT', 'Notice Sent'), ('PENDING_CURE', 'Pending Cure'), ('CURED', 'Cured'), ('HEARING_SCHEDULED', 'Hearing Scheduled'), ('FINED', 'Fined'), ('CLOSED', 'Closed')], default='REPORTED', max_length=30)),
                ('reported_date', models.DateField(help_text='Date violation was reported')),
                ('reported_by', models.CharField(help_text='Who reported the violation', max_length=255)),
                ('cure_deadline', models.DateField(blank=True, help_text='Deadline to cure violation', null=True)),
                ('cured_date', models.DateField(blank=True, help_text='Date violation was cured', null=True)),
                ('fine_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fine amount if assessed', max_digits=15)),
                ('fine_paid', models.BooleanField(default=False, help_text='Whether fine has been paid')),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this violation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='accounting.owner')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='tenants.tenant')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='accounting.unit')),
            ],
            options={
                'db_table': 'violations',
                'ordering': ['-reported_date'],
            },
        ),
        migrations.CreateModel(
            name='ViolationHearing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('scheduled_date', models.DateField(help_text='Date hearing is scheduled')),
                ('scheduled_time', models.TimeField(help_text='Time of hearing')),
                ('location', models.CharField(help_text='Hearing location or video conference link', max_length=255)),
                ('outcome', models.CharField(choices=[('PENDING', 'Pending'), ('UPHELD', 'Upheld'), ('OVERTURNED', 'Overturned'), ('MODIFIED', 'Modified'), ('POSTPONED', 'Postponed')], default='PENDING', max_length=20)),
                ('outcome_notes', models.TextField(blank=True, help_text='Details of hearing outcome')),
                ('fine_assessed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fine amount assessed at hearing', max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hearings', to='accounting.violation')),
            ],
            options={
                'db_table': 'violation_hearings',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='ViolationNotice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notice_type', models.CharField(choices=[('FIRST_NOTICE', 'First Notice'), ('SECOND_NOTICE', 'Second Notice'), ('FINAL_NOTICE', 'Final Notice'), ('HEARING_NOTICE', 'Hearing Notice'), ('FINE_NOTICE', 'Fine Notice')], max_length=20)),
                ('sent_date', models.DateField(help_text='Date notice was sent')),
                ('delivery_method', models.CharField(choices=[('EMAIL', 'Email'), ('CERTIFIED_MAIL', 'Certified Mail'), ('REGULAR_MAIL', 'Regular Mail')], default='EMAIL', max_length=20)),
                ('tracking_number', models.CharField(blank=True, help_text='Tracking number for certified mail', max_length=100)),
                ('delivered_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notices', to='accounting.violation')),
            ],
            options={
                'db_table': 'violation_notices',
                'ordering': ['-sent_date'],
            },
        ),
        migrations.CreateModel(
            name='ViolationPhoto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo_url', models.URLField(help_text='URL to photo (S3, CloudFlare, etc.)', max_length=500)),
                ('caption', models.CharField(blank=True, help_text='Photo caption or description', max_length=255)),
                ('taken_date', models.DateField(help_text='Date photo was taken')),
                ('uploaded_by', models.CharField(help_text='Who uploaded this photo', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('violation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='accounting.violation')),
            ],
            options={
                'db_table': 'violation_photos',
                'ordering': ['taken_date'],
            },
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['tenant', '-reported_date'], name='violations_tenant__5da747_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['owner', '-reported_date'], name='violations_owner_i_a4f06a_idx'),
        ),
        migrations.AddIndex(
            model_name='violation',
            index=models.Index(fields=['status'], name='violations_status_01f226_idx'),
        ),
    ]
